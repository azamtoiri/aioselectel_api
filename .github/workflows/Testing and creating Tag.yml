name: Test and Create Release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Configure Poetry
        run: poetry config virtualenvs.create false

      - name: Install dependencies
        run: poetry install

      - name: Set up .env file
        run: |
          echo "SELECTEL_USERNAME=${{ secrets.SELECTEL_USERNAME }}" >> .env
          echo "SELECTEL_ACCOUNT_ID=${{ secrets.SELECTEL_ACCOUNT_ID }}" >> .env
          echo "SELECTEL_PASSWORD=${{ secrets.SELECTEL_PASSWORD }}" >> .env

      - name: Run tests
        run: poetry run pytest

      - name: Create Release Tag
        if: success()
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          TAG="v$(poetry version -s)"
          git tag $TAG
          git push origin $TAG

      - name: Create GitHub Release
        if: success()
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.create_release_tag.outputs.TAG }}
          release_name: Release ${{ steps.create_release_tag.outputs.TAG }}
          body: |
            Release of version ${{ steps.create_release_tag.outputs.TAG }}.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
